import{e,j as s,K as t,m as o,B as n,ap as r,o as a,a8 as i}from"./index-f84eb1d7.js";import{E as c}from"./el-button-f55acee8.js";import{v as l,L as m}from"./directive-4e31216c.js";import"./index-6d810c7d.js";import"./use-form-item-d198a812.js";import"./index-01b4041d.js";const u={install(e){e.directive("loading",l),e.config.globalProperties.$loading=m},directive:l,service:m},d={lock:!0,text:"加载中..."},p=(e,s={})=>{let t;const o=()=>{t&&t.close()},n={...d,...s};return(...s)=>{try{r=n,t=u.service(r);const a=e(...s);return a instanceof Promise?a.then((e=>e)).catch((e=>{throw e})).finally((()=>{o()})):(o(),Promise.resolve(a))}catch(a){throw o(),a}var r}},f={code:0,data:{},message:"获取成功"};function g(){return new Promise((e=>{setTimeout((()=>{e(f)}),1e3)}))}function h(){return new Promise(((e,s)=>{setTimeout((()=>{s(new Error("发生错误"))}),1e3)}))}const v={class:"app-container"},w=n("h4",null,"该示例是演示：通过将要执行的函数传递给 hook，让 hook 自动开启全屏 loading，函数执行结束后自动关闭 loading",-1),x=e({__name:"use-fullscreen-loading",setup(e){const n={text:"即将发生错误...",background:"#F56C6C20",svg:'\n  <path class="path" d="\n    M 30 15\n    L 28 17\n    M 25.61 25.61\n    A 15 15, 0, 0, 1, 15 30\n    A 15 15, 0, 1, 1, 27.99 7.5\n    L 15 15\n  " style="stroke-width: 4px; fill: rgba(0, 0, 0, 0)"/>\n',svgViewBox:"-10, -10, 50, 50"},l=async()=>{const e=await p(g)();r.success(e.message)},m=async()=>{try{await p(h,n)()}catch(e){r.error(e.message)}};return(e,n)=>{const r=c;return a(),s("div",v,[w,t(r,{onClick:l},{default:o((()=>[i(" 查询成功 ")])),_:1}),t(r,{onClick:m},{default:o((()=>[i(" 查询失败 ")])),_:1})])}}});export{x as default};
